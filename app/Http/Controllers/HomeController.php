<?php

namespace App\Http\Controllers;

use App\Models\Balle;
use App\Models\QrCode;
use Illuminate\Http\Request;

class HomeController extends Controller
{
    public function index(Request $request)
    {
        $currentPage = $request->query('page', 'dashboard');
        $balles = Balle::latest()->get()->toArray(); // Convert to array for consistency
        $qrcodes = QrCode::with('balle')->latest()->get()->toArray();
        $ballesCount = Balle::count();
        $autoGenerated = 0;

        if ($request->has('check_new')) {
            $autoGenerated = $this->generateNewQRCodes();
        }

        return view('index', compact('currentPage', 'balles', 'qrcodes', 'ballesCount', 'autoGenerated'));
    }

    private function generateNewQRCodes()
    {
        $newBalles = Balle::whereDoesntHave('qrcode')->get();
        $count = 0;

        foreach ($newBalles as $balle) {
            $qrContent = "ID: {$balle->id}\nRéférence: {$balle->reference}\nDate sortie: {$balle->date_sortie}\nPoids brut: {$balle->poids_brut} kg\nPoids net: {$balle->poids_net} kg\nVariété: {$balle->variete}\nUsine: {$balle->usine}";
            $qrData = \SimpleSoftwareIO\QrCode\Facades\QrCode::format('png')->size(200)->generate($qrContent);
            $qrDataBase64 = 'data:image/png;base64,' . base64_encode($qrData);

            QrCode::create([
                'reference' => $balle->reference,
                'qr_data' => $qrDataBase64
            ]);
            $count++;
        }

        return $count;
    }
}